#!/bin/bash
### BEGIN INIT INFO
# Provides:           massema.net
# Required-Start:     $remote_fs $network
# Required-Stop:      $remote_fs $network
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Start massema.net
### END INIT INFO
#
# the below requires a somewhat debian-like system.
#
# make a link to this file from etc/init.d;
# ln -s <this file> /etc/init.d/
#
# create the runlevel-links like this;
# sudo update-rc.d massema.net defaults 50
#
# now this should work;
# sudo invoke-rc.d massema.net start
# sudo invoke-rc.d massema.net stop

export ITEM=massema.net
export ITEM_STARTMOD=mm
export ITEM_USER=masse
export ITEM_LOGDIR=/var/log/$ITEM
export ITEM_LIBDIR=`eval echo ~$ITEM_USER`/git/$ITEM
export ERL=`which erl`
export ITEM_GROUP=`id -g $ITEM_USER`
export ITEM_BOOTLOG=$ITEM_LOGDIR/boot.log
export ITEM_ERLLOG=$ITEM_LOGDIR/erlang.log
export SNAME=`echo $ITEM | tr "\-." "_"`

[ -d $ITEM_LOGDIR ] || mkdir $ITEM_LOGDIR
chown $ITEM_USER:$ITEM_GROUP $ITEM_LOGDIR
[ -f $ITEM_BOOTLOG ] || touch $ITEM_BOOTLOG
chown $ITEM_USER:$ITEM_GROUP $ITEM_BOOTLOG

item_start() {
    DEPS=$ITEM_LIBDIR/deps
    [ -d $DEPS ] && for dep in $DEPS/* ; do PAS="$PAS -pa $dep/ebin" ; done
    sudo -u $ITEM_USER \
        $ERL  \
        -sname $SNAME \
        -setcookie $ITEM \
        -boot start_sasl \
        -kernel error_logger "{file,\"$ITEM_ERLLOG\"}" \
        -pa $ITEM_LIBDIR/ebin \
        $PAS \
        -run $ITEM_STARTMOD \
        -detached
}

# osx does not have pkill. #fail
beamgrep() {
    ps -u "$1" -o pid,command | grep beam | grep "$2" | cut -c-6
}

item_stop() {
    P=`beamgrep $ITEM_USER "run $ITEM_STARTMOD"`
    sudo -u $ITEM_USER kill -KILL $P
}

item_shell() {
    HOST=`echo $HOSTNAME | cut -f1 -d"."`
    sudo -u $ITEM_USER $ERL -sname $$ -remsh ${SNAME}@${HOST} -setcookie $ITEM
}

out() {
    flag=""
    [ "$1" == "-n" ] && flag="-n" && shift
    echo $flag "$1" >> $ITEM_BOOTLOG
}

out "`date | tr ' ' '-'` "
case "$1" in
    start)
        out -n "starting $0..."
        item_start && out -n " started..."
        out " done."
        ;;
    stop)
        out -n "stopping..."
        item_stop && out -n " stopped..."
        out " done."
        ;;
    restart | force-reload)
        out "restarting."
        $0 stop
        sleep 1
        $0 start
        ;;
    attach | shell)
        out "attaching $USER - $$."
        item_shell || out -n "Failed... "
        out "detaching $USER - $$."
        ;;
    *)
        exit 1
esac
